<?xml version="1.0" encoding="utf-8"?>
<!--
 *
 * The MIT License
 *
 * Copyright (c) 2008
 * United Nations Office at Geneva
 * Center for Advanced Visual Analytics
 * http://cava.unog.ch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
-->
<mx:CheckBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	selected="true"
	label="AutoFit"
	toolTip="Select to restrict graph to boundaries of current view space.  Graph will autofit its size so that all nodes are visible."
	click="toggleAutoFit()" >
	
	<mx:Script>
		<![CDATA[
			import org.un.cava.birdeye.ravis.utils.events.VGraphEvent;
			import org.un.cava.birdeye.ravis.graphLayout.visual.VisualGraph;	
			/**
			 * ATTENTION: autoFitting has an impact on other layouter
			 * specific controls, we should somehow inform those controls
			 * possibly by sending an event 
			 * */
			
			private var _vgraph:VisualGraph;

			/**
			 * Provides access to the registered vgraph object.
			 * */
			public function set vgraph(v:VisualGraph):void {
				_vgraph = v;
				registerListeners();
			}


			/**
			 * @private
			 * */
			public function get vgraph():VisualGraph {
				return _vgraph;
			}
			
			/**
			 * Event handler to be triggered in case the
			 * layouter in VGraph has changed.
			 * Only used to apply the current value to the new layouter.
			 * */
			public function layouterChanged(e:VGraphEvent = null):void {
				
				/* check if we have a layouter at all */
				if(_vgraph == null || _vgraph.layouter == null) {
					trace("Cannot toggle AutoFit to missing vgraph or null layouter");
					return;
				}
				
				/* this is a default control component, and valid
				 * for all layouters, thus we only need to apply
				 * the value to the new layouter. 
				 * We don't call toggleAutoFit(), since this 
				 * triggers a draw(), which we do not want here
				 */ 
				_vgraph.layouter.autoFitEnabled = this.selected;
				_vgraph.layouter.layoutChanged = true;
			}
			
			/**
			 * toggles the autoFit capability of most layouters.
			 * */
			public function toggleAutoFit():void {
				
				/* check if we have a layouter at all */
				if(_vgraph == null || _vgraph.layouter == null) {
					trace("Cannot toggle AutoFit to missing vgraph or null layouter");
					return;
				}
				
				_vgraph.layouter.autoFitEnabled = this.selected;
				_vgraph.layouter.layoutChanged = true;
				_vgraph.draw();
			}
			
			/**
			 * This refreshes the current value of the
			 * checkbox with the value in the layouter.
			 * */
			public function refreshCheckbox(e:VGraphEvent = null):void {
				/* check if we have a layouter at all */
				if(_vgraph == null || _vgraph.layouter == null) {
					trace("Cannot refresh AutoFit from missing vgraph or null layouter");
					return;
				}
				/* refresh the value */
				this.selected = _vgraph.layouter.autoFitEnabled;
			}
			
			/**
			 * Adds the listeners to update on changes in the VGraph
			 * */
			private function registerListeners():void {
				_vgraph.addEventListener(VGraphEvent.VGRAPH_CHANGED,refreshCheckbox);
				_vgraph.addEventListener(VGraphEvent.LAYOUTER_CHANGED,layouterChanged);
			}	
		]]>
	</mx:Script>
</mx:CheckBox>
