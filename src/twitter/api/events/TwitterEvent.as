package twitter.api.events{	import flash.events.Event;	public class TwitterEvent extends Event	{		public static const ON_FRIENDS_RESULT : String = "onFriendsResult";		public static const ON_FRIENDS_TIMELINE_RESULT: String = "onFriendsTimelineResult";		public static const ON_USER_TIMELINE_RESULT: String = "onUserTimelineResult";		public static const ON_PUBLIC_TIMELINE_RESULT : String = "onPublicTimelineResult";		public static const ON_SET_STATUS : String = "onSetStatus";		public static const ON_SET_MOBILE_NOTIFICATIONS : String = "onSetMobileNotifications";		public static const ON_SHOW_STATUS:String = "onShowStatus";		public static const ON_REPLIES_TIMELINE_RESULT:String = "onReplies";		public static const ON_DIRECT_MESSAGES_TIMELINE_RESULT:String = "onDirectMessages";		public static const ON_SENT_DIRECT_MESSAGES_TIMELINE_RESULT:String = "onSentDirectMessages";		public static const ON_DESTROY:String = "onDestroy";		public static const ON_FOLLOWERS:String = "onFollowers";		public static const ON_FEATURED:String = "onFeatured";		public static const ON_ERROR:String = "onError";		public static const ON_RATE_LIMIT_STATUS:String = "onRateLimitStatus";		private var _data:Object = new Object ();		/** @todo I may be a bit paranoid here...I should think that maintaining identity in TwitterStatus		 * is enough; but just in case I am also maintaining it here.		 */		private var _server:String;		private var _username:String;		public function TwitterEvent (type : String, bubbles : Boolean = false, cancelable : Boolean = false)		{			super (type, bubbles, cancelable);		}		public function set data(reqData:Object):void		{			_data = reqData;		}		public function get data():Object		{			return _data;			}		public function identity(reqServer:String, reqUsername:String):void		{			_server   = reqServer;			_username = reqUsername;		}		public function get unique():String		{			return _server+'$'+_username;		}		public function get server():String		{			return _server;			}		public function get username():String		{			return _username;			}		override public function clone():Event		{			var event:TwitterEvent = new TwitterEvent(type, bubbles, cancelable);			event.identity(server, username);			event.data = this.data;			return event;			}	}}