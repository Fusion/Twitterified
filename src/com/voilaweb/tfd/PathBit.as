package com.voilaweb.tfd {		import flash.geom.Point;		public class PathBit	{		static public const UP:int    = 0x01;		static public const DOWN:int  = 0x02;		static public const RIGHT:int = 0x04;		static public const LEFT:int  = 0x08;		static public const U:String  = "U";		static public const D:String  = "D";		static public const L:String  = "L";		static public const R:String  = "R";		static public const UL:String = "7";		static public const UR:String = "9";		static public const DL:String = "1";		static public const DR:String = "3";		public var point:Point = new Point();		public var horizontal:int;		public var vertical:int;		public var direction:int;				function PathBit(point1:Point, point2:Point)		{			horizontal = point2.x - point1.x;			vertical   = point2.y - point1.y;						point.x = point2.x;			point.y = point2.y;				direction = 0;			if(0 == horizontal && 0 == vertical) return;			// Compute angle, in degrees: horizontal == new x, vertical == new y			var angle:Number = Math.atan2(horizontal, -vertical) * 180 / Math.PI;			if(angle < 0) angle = 360 + angle;			if(angle >= 337.5 || angle < 22.5)			{				direction = UP;			} 			else if(angle >= 22.5 && angle < 67.5)			{				direction = UP | RIGHT;			}			else if(angle >= 66.5 && angle < 112.5)			{				direction = RIGHT;			}			else if(angle >= 112.5 && angle < 157.5)			{				direction = RIGHT | DOWN;			}			else if(angle >= 157.5 && angle < 202.5)			{				direction = DOWN;			}			else if(angle >= 202.5 && angle < 247.5)			{				direction = DOWN | LEFT;			}			else if(angle >= 247.5 && angle < 292.5)			{				direction = LEFT;			}			else if(angle >= 292.5 && angle < 337.5)			{				direction = LEFT | UP;			}			/*			if(0 != horizontal)				direction = (horizontal > 0 ? RIGHT : LEFT);			if(0 != vertical)					direction |= (vertical > 0 ? DOWN : UP);			*/		} 			}}